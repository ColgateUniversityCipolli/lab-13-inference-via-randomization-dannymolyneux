setwd("~/Documents/GitHub/week-12-coding-assignment-dannymolyneux")
setwd("~/Documents/GitHub/lab-13-inference-via-randomization-dannymolyneux")
library(tidyverse)
data = read_csv("zebrafinches.csv")
view(data)
far.vec = data$further
far.vec = data$further
mu0 = 0
far.t.stat = (mean(far.vec) - mu0)/(sd(far.vec)/sqrt(n)) #far t statistic
n = 25
far.t.stat = (mean(far.vec) - mu0)/(sd(far.vec)/sqrt(n)) #far t statistic
far.t.stat
?dnorm
pdf = dnorm(t)
pdf = dnorm(far.t.stat)
pdf
library(e1071)
far.error = skewness(far.vec)
skewness(far.vec)
far.t.stat = (mean(far.vec) - mu0)/(sd(far.vec)/sqrt(n)) #far t statistic
far.pdf = dnorm(far.t.stat)
far.error = (skewness(far.vec)/sqrt(n))*((2*far.t.stat^2 + 1)/6)*far.pdf
far.error
t.stat = seq(-10,10, by = 0.01)
error = (skewness(far.vec)/sqrt(n))*((2*t.stat^2 + 1)/6)*dnorm(t.stat)
error
library(ggplot)
library(ggplot2)
?data.frame
t.stat = seq(-10,10, by = 0.01)
error.vec = (skewness(far.vec)/sqrt(n))*((2*t.stat^2 + 1)/6)*dnorm(t.stat)
error.dat = data.frame(t = t.stat, error = error.vec)
view(error.dat)
error.dat = data.frame(t = t.stat, error = error.vec)
error.plot = ggplot(data = error.dat, aes(x = t, y = error))+
geom_line(color = "red")
error.plot
error.plot = ggplot(data = error.dat, aes(x = t, y = error))+
geom_line(color = "red") +
labs(title = "Error with respect to t statistic for further data")
error.plot
?qnoem
?qnorm
alpha = 0.05
qnorm(alpha)
t = qnorm(alpha)
dnorm(t)
#part c
alpha = 0.05
t = qnorm(alpha)
n.required = ((skewness(far.vec)/(6*.1*alpha))*((2*t^2 + 1)/6)*dnorm(t))
n.required = ((skewness(far.vec)/(6*.1*alpha))*((2*t^2 + 1)/6)*dnorm(t))^2
n.required
n.required = ((skewness(far.vec)/(6*.1*alpha))*((2*t^2 + 1))*dnorm(t))^2
n.required
close.vec = data$closer
diff.vec = data$diff
#part a
R = 10000
n = 25
far.resamples = tibble(t.stats = rep(NA, R))
for(i in 1:R){
curr.resample = sample(far.vec,
size = n,
replace = T)
far.resamples$t.stats[i] = mean(curr.resample)/(sd(far.vec)/sqrt(n))
}
far.resamples
view(far.resamples)
#part a
R = 10000
n = 25
far.resamples = tibble(t.stats = rep(NA, R))
close.resamples = tibble(t.stats = rep(NA, R))
diff.resamples = tibble(t.stats = rep(NA, R))
for(i in 1:R){
curr.far.resample = sample(far.vec,
size = n,
replace = T)
curr.close.resample = sample(close.vec,
size = n,
replace = T)
curr.diff.resample = sample(diff.vec,
size = n,
replace = T)
far.resamples$t.stats[i] = mean(curr.far.resample)/(sd(far.vec)/sqrt(n))
close.resamples$t.stats[i] = mean(curr.close.resample)/(sd(close.vec)/sqrt(n))
diff.resamples$t.stats[i] = mean(curr.diff.resample)/(sd(diff.vec)/sqrt(n))
}
view(diff.resamples)
mean(far.resamples$t.stats)
resamples.null.far = far.resamples$t.stats - mean(far.resamples$t.stats)
view(resamples.null.far)
mean(resamples.null.far)
#shifted resamples
resamples.null.far = far.resamples$t.stats - mean(far.resamples$t.stats)
resamples.null.close = close.resamples$t.stats - mean(close.resamples$t.stats)
resamples.null.diff = diff.resamples$t.stats - mean(diff.resamples$t.stats)
far.t.stat = (mean(far.vec) - 0)/(sd(far.vec)/sqrt(n)) #far t statistic
close.t.stat = (mean(close.vec) - 0)/(sd(close.vec)/sqrt(n)) #close t statistic
diff.t.stat = (mean(diff.vec) - 0)/(sd(diff.vec)/sqrt(n)) #diff t statistic
far.resamples$t.stats - far.t.stat
hist(far.resamples$t.stats)
hist(resamples.null.far)
#shifted resamples
resamples.null.far = far.resamples$t.stats - mean(far.resamples$t.stats)
resamples.null.close = close.resamples$t.stats - mean(close.resamples$t.stats)
resamples.null.diff = diff.resamples$t.stats - mean(diff.resamples$t.stats)
#mean of shifted resamples
mean(resamples.null.far)
mean(resamples.null.close)
mean(resamples.null.diff)
#part a
far.vec = data$further
close.vec = data$closer
diff.vec = data$diff
#part b
mean(resamples.null.far <= mean(far.resamples$t.stats))
#part b
mean(resamples.null.far <= mean(far.resamples$t.stats))
#part b
mean(resamples.null.far <= mean(far.resamples$t.stats))
mean(resamples.null.close <= mean(close.resamples$t.stats))
mean(resamples.null.close >= mean(close.resamples$t.stats))
mean(resamples.null.close >= mean(close.resamples$t.stats))
#part b
mean(resamples.null.far <= mean(far.resamples$t.stats))
mean(resamples.null.diff <= mean(diff.resamples$t.stats))
mean(resamples.null.diff >= mean(diff.resamples$t.stats))
#part b
far.t.stat = (mean(far.vec) - mu0)/(sd(far.vec)/sqrt(n)) #far t statistic
close.t.stat = (mean(close.vec) - mu0)/(sd(close.vec)/sqrt(n)) #far t statistic
diff.t.stat = (mean(diff.vec) - mu0)/(sd(diff.vec)/sqrt(n)) #far t statistic
mean(resamples.null.far <= far.t.stat)
mean(resamples.null.close >= close.t.stat)
mean(resamples.null.diff >= abs(diff.t.stat)) + mean(resamples.null.diff <= -abs(diff.t.stat))
